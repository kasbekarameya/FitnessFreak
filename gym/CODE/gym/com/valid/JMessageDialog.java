package com.openbravo.data.gui;
20	
21	import java.awt.*;
22	import javax.swing.*;
23	import com.openbravo.data.loader.LocalRes;
24	/**
25	 *
26	 * @author  adrian
27	 */
28	public class JMessageDialog extends javax.swing.JDialog {
29	   
30	    /** Creates new form JMessageDialog */
31	    private JMessageDialog(java.awt.Frame parent, boolean modal) {       
32	        super(parent, modal);       
33	    }
34	    /** Creates new form JMessageDialog */
35	    private JMessageDialog(java.awt.Dialog parent, boolean modal) {       
36	        super(parent, modal);       
37	    }
38	   
39	    private static Window getWindow(Component parent) {
40	        if (parent == null) {
41	            return new JFrame();
42	        } else if (parent instanceof Frame || parent instanceof Dialog) {
43	            return (Window) parent;
44	        } else {
45	            return getWindow(parent.getParent());
46	        }
47	    }
48	   
49	    public static void showMessage(Component parent, MessageInf inf) {
50	       
51	        Window window = getWindow(parent);     
52	       
53	        JMessageDialog myMsg;
54	        if (window instanceof Frame) {
55	            myMsg = new JMessageDialog((Frame) window, true);
56	        } else {
57	            myMsg = new JMessageDialog((Dialog) window, true);
58	        }
59	       
60	        myMsg.initComponents();
61	        myMsg.applyComponentOrientation(parent.getComponentOrientation());
62	        myMsg.jscrException.setVisible(false);       
63	        myMsg.getRootPane().setDefaultButton(myMsg.jcmdOK);
64	       
65	        myMsg.jlblIcon.setIcon(inf.getSignalWordIcon());
66	        myMsg.jlblErrorCode.setText(inf.getErrorCodeMsg());
67	        myMsg.jlblMessage.setText("<html>" + inf.getMessageMsg());
68	       
69	        // Capturamos el texto de la excepcion...
70	        if (inf.getCause() == null) {
71	            myMsg.jtxtException.setText(null);
72	        } else {           
73	            StringBuffer sb = new StringBuffer();
74	           
75	            if (inf.getCause() instanceof Throwable) {
76	                Throwable t = (Throwable) inf.getCause();
77	                while (t != null) {
78	                    sb.append(t.getClass().getName());
79	                    sb.append(": \n");
80	                    sb.append(t.getMessage());
81	                    sb.append("\n\n");
82	                    t = t.getCause();
83	                }
84	            } else if (inf.getCause() instanceof Throwable[]) {
85	                Throwable[] m_aExceptions = (Throwable[]) inf.getCause();
86	                for (int i = 0; i < m_aExceptions.length; i++) {
87	                    sb.append(m_aExceptions[i].getClass().getName());
88	                    sb.append(": \n");
89	                    sb.append(m_aExceptions[i].getMessage());
90	                    sb.append("\n\n");
91	                }             
92	            } else if (inf.getCause() instanceof Object[]) {
93	                Object [] m_aObjects = (Object []) inf.getCause();
94	                for (int i = 0; i < m_aObjects.length; i++) {
95	                    sb.append(m_aObjects[i].toString());
96	                    sb.append("\n\n");
97	                }             
98	            } else if (inf.getCause() instanceof String) {
99	                sb.append(inf.getCause().toString());
100	            } else {
101	                sb.append(inf.getCause().getClass().getName());
102	                sb.append(": \n");
103	                sb.append(inf.getCause().toString());
104	            }
105	            myMsg.jtxtException.setText(sb.toString()); 
106	        }       
107	        myMsg.jtxtException.setCaretPosition(0);           
108	       
109	        //myMsg.show();
110	        myMsg.setVisible(true);
111	    }
112	   
113	    /** This method is called from within the constructor to
114	     * initialize the form.
115	     * WARNING: Do NOT modify this code. The content of this method is
116	     * always regenerated by the Form Editor.
117	     */
118	    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
119	    private void initComponents() {
120	
121	        jPanel4 = new javax.swing.JPanel();
122	        jlblErrorCode = new javax.swing.JLabel();
123	        jlblMessage = new javax.swing.JLabel();
124	        jscrException = new javax.swing.JScrollPane();
125	        jtxtException = new javax.swing.JTextArea();
126	        jlblIcon = new javax.swing.JLabel();
127	        jPanel3 = new javax.swing.JPanel();
128	        jPanel2 = new javax.swing.JPanel();
129	        jcmdOK = new javax.swing.JButton();
130	        jcmdMore = new javax.swing.JButton();
131	
132	        setTitle(LocalRes.getIntString("title.message")); // NOI18N
133	        setResizable(false);
134	        addWindowListener(new java.awt.event.WindowAdapter() {
135	            public void windowClosing(java.awt.event.WindowEvent evt) {
136	                closeDialog(evt);
137	            }
138	        });
139	
140	        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
141	        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));
142	
143	        jlblErrorCode.setFont(jlblErrorCode.getFont().deriveFont(jlblErrorCode.getFont().getStyle() & ~java.awt.Font.BOLD, jlblErrorCode.getFont().getSize()-2));
144	        jlblErrorCode.setText("jlblErrorCode");
145	        jPanel4.add(jlblErrorCode);
146	
147	        jlblMessage.setText("jlblMessage");
148	        jlblMessage.setVerticalAlignment(javax.swing.SwingConstants.TOP);
149	        jlblMessage.setMinimumSize(new java.awt.Dimension(200, 100));
150	        jlblMessage.setPreferredSize(new java.awt.Dimension(200, 100));
151	        jPanel4.add(jlblMessage);
152	
153	        jscrException.setAlignmentX(0.0F);
154	
155	        jtxtException.setEditable(false);
156	        jscrException.setViewportView(jtxtException);
157	
158	        jPanel4.add(jscrException);
159	
160	        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);
161	
162	        jlblIcon.setVerticalAlignment(javax.swing.SwingConstants.TOP);
163	        jlblIcon.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
164	        getContentPane().add(jlblIcon, java.awt.BorderLayout.LINE_START);
165	
166	        jPanel3.setLayout(new java.awt.BorderLayout());
167	
168	        jcmdOK.setText(LocalRes.getIntString("button.ok")); // NOI18N
169	        jcmdOK.addActionListener(new java.awt.event.ActionListener() {
170	            public void actionPerformed(java.awt.event.ActionEvent evt) {
171	                jcmdOKActionPerformed(evt);
172	            }
173	        });
174	        jPanel2.add(jcmdOK);
175	
176	        jcmdMore.setText(LocalRes.getIntString("button.information")); // NOI18N
177	        jcmdMore.addActionListener(new java.awt.event.ActionListener() {
178	            public void actionPerformed(java.awt.event.ActionEvent evt) {
179	                jcmdMoreActionPerformed(evt);
180	            }
181	        });
182	        jPanel2.add(jcmdMore);
183	
184	        jPanel3.add(jPanel2, java.awt.BorderLayout.LINE_END);
185	
186	        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);
187	
188	        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
189	        setBounds((screenSize.width-455)/2, (screenSize.height-171)/2, 455, 171);
190	    }// </editor-fold>//GEN-END:initComponents
191	
192	    private void jcmdMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdMoreActionPerformed
193	       
194	        // Add your handling code here:
195	        jcmdMore.setEnabled(false);
196	        jscrException.setVisible(true);
197	        setSize(getWidth(), 310);
198	        validateTree();
199	       
200	    }//GEN-LAST:event_jcmdMoreActionPerformed
201	
202	    private void jcmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdOKActionPerformed
203	        // Add your handling code here:
204	        setVisible(false);
205	        dispose();
206	    }//GEN-LAST:event_jcmdOKActionPerformed
207	   
208	    /** Closes the dialog */
209	    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
210	        setVisible(false);
211	        dispose();
212	    }//GEN-LAST:event_closeDialog
213	   
214	   
215	    // Variables declaration - do not modify//GEN-BEGIN:variables
216	    private javax.swing.JPanel jPanel2;
217	    private javax.swing.JPanel jPanel3;
218	    private javax.swing.JPanel jPanel4;
219	    private javax.swing.JButton jcmdMore;
220	    private javax.swing.JButton jcmdOK;
221	    private javax.swing.JLabel jlblErrorCode;
222	    private javax.swing.JLabel jlblIcon;
223	    private javax.swing.JLabel jlblMessage;
224	    private javax.swing.JScrollPane jscrException;
225	    private javax.swing.JTextArea jtxtException;
226	    // End of variables declaration//GEN-END:variables
227	   
228	}
